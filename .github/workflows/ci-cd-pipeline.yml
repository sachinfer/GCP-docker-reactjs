name: CI/CD Pipeline for React App on GKE with ArgoCD

on:
  push:
    branches:
      - main  # This will trigger the pipeline on a push to the main branch
  pull_request:
    branches:
      - master  # This will also trigger the pipeline for PRs to the master branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js (for React app)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Specify the Node.js version for your React app

      # Install dependencies
      - name: Install Dependencies
        run: |
          npm install
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      # Run linting (optional)
      - name: Run Linting
        run: |
          npm run lint
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      # Run Tests (optional)
      - name: Run Tests
        run: |
          npm test
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      # Build React app
      - name: Build React App
        run: |
          npm run build
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      # Set up Docker Buildx (for building multi-platform images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Google Cloud using gcloud CLI (using your Gmail)
      - name: Google Cloud Login
        run: |
          echo ${{ secrets.GCP_SA_KEY }} | gcloud auth activate-service-account --key-file=-
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud auth configure-docker gcr.io
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      # Build Docker image and push it to Google Container Registry (GCR)
      - name: Build and Push Docker Image to GCR
        run: |
          IMAGE_NAME=gcr.io/${{ secrets.GCP_PROJECT_ID }}/web-apptwo:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      # Deploy to GKE using ArgoCD
      - name: Set up kubectl
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials minimal-cluster --zone asia-east2-b --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Trigger ArgoCD to Deploy
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} --auth-token ${{ secrets.ARGOCD_AUTH_TOKEN }} --insecure
          argocd app sync my-app --auth-token ${{ secrets.ARGOCD_AUTH_TOKEN }} --insecure
